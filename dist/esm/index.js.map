{"version":3,"sources":["../../src/pow.ts","../../src/take.ts","../../src/fibonacci.ts"],"sourcesContent":["/**\n * Computes x^n\n */\nexport function pow(x: number, n: number): number {\n    let result = 1;\n    for ( let i = 0; i < n; i++ ){\n        result *= x;\n    }\n    return result;\n}\n\n","/**\n * Take n element(s) from a given generator.\n */\nexport function take<T>(generator: Generator<T>, n: number): T[] {\n    let result : T[] = [];\n    for ( let i = 0; i < n; i++ ){\n        result.push(generator.next().value);\n    }\n    return result;\n}\n","/**\n * Computes x^n\n */\nexport function* fibonacci(a: number, b: number): Generator<number> {\n    let u = a;\n    let v = b;\n    while(true){\n        let current = u;\n        u = v;\n        v = current + v;\n        yield current;\n    }\n}\n\n"],"mappings":";AAGO,SAAS,IAAI,GAAW,GAAmB;AAC9C,MAAI,SAAS;AACb,WAAU,IAAI,GAAG,IAAI,GAAG,KAAK;AACzB,cAAU;AAAA,EACd;AACA,SAAO;AACX;;;ACNO,SAAS,KAAQ,WAAyB,GAAgB;AAC7D,MAAI,SAAe,CAAC;AACpB,WAAU,IAAI,GAAG,IAAI,GAAG,KAAK;AACzB,WAAO,KAAK,UAAU,KAAK,EAAE,KAAK;AAAA,EACtC;AACA,SAAO;AACX;;;ACNO,UAAU,UAAU,GAAW,GAA8B;AAChE,MAAI,IAAI;AACR,MAAI,IAAI;AACR,SAAM,MAAK;AACP,QAAI,UAAU;AACd,QAAI;AACJ,QAAI,UAAU;AACd,UAAM;AAAA,EACV;AACJ;","names":[]}