{"version":3,"sources":["/mnt/data/workspaces/workspace_formation/ts-examples/dist/cjs/index.cjs","../../src/pow.ts","../../src/take.ts","../../src/fibonacci.ts"],"names":[],"mappings":"AAAA;ACGO,SAAS,GAAA,CAAI,CAAA,EAAW,CAAA,EAAmB;AAC9C,EAAA,IAAI,OAAA,EAAS,CAAA;AACb,EAAA,IAAA,CAAA,IAAU,EAAA,EAAI,CAAA,EAAG,EAAA,EAAI,CAAA,EAAG,CAAA,EAAA,EAAK;AACzB,IAAA,OAAA,GAAU,CAAA;AAAA,EACd;AACA,EAAA,OAAO,MAAA;AACX;ADDA;AACA;AENO,SAAS,IAAA,CAAQ,SAAA,EAAyB,CAAA,EAAgB;AAC7D,EAAA,IAAI,OAAA,EAAe,CAAC,CAAA;AACpB,EAAA,IAAA,CAAA,IAAU,EAAA,EAAI,CAAA,EAAG,EAAA,EAAI,CAAA,EAAG,CAAA,EAAA,EAAK;AACzB,IAAA,MAAA,CAAO,IAAA,CAAK,SAAA,CAAU,IAAA,CAAK,CAAA,CAAE,KAAK,CAAA;AAAA,EACtC;AACA,EAAA,OAAO,MAAA;AACX;AFQA;AACA;AGfO,QAAA,EAAU,SAAA,CAAU,CAAA,EAAW,CAAA,EAA8B;AAChE,EAAA,IAAI,EAAA,EAAI,CAAA;AACR,EAAA,IAAI,EAAA,EAAI,CAAA;AACR,EAAA,MAAA,CAAM,IAAA,EAAK;AACP,IAAA,IAAI,QAAA,EAAU,CAAA;AACd,IAAA,EAAA,EAAI,CAAA;AACJ,IAAA,EAAA,EAAI,QAAA,EAAU,CAAA;AACd,IAAA,MAAM,OAAA;AAAA,EACV;AACJ;AHiBA;AACE;AACA;AACA;AACF,sEAAC","file":"/mnt/data/workspaces/workspace_formation/ts-examples/dist/cjs/index.cjs","sourcesContent":[null,"/**\n * Computes x^n\n */\nexport function pow(x: number, n: number): number {\n    let result = 1;\n    for ( let i = 0; i < n; i++ ){\n        result *= x;\n    }\n    return result;\n}\n\n","/**\n * Take n element(s) from a given generator.\n */\nexport function take<T>(generator: Generator<T>, n: number): T[] {\n    let result : T[] = [];\n    for ( let i = 0; i < n; i++ ){\n        result.push(generator.next().value);\n    }\n    return result;\n}\n","/**\n * Computes x^n\n */\nexport function* fibonacci(a: number, b: number): Generator<number> {\n    let u = a;\n    let v = b;\n    while(true){\n        let current = u;\n        u = v;\n        v = current + v;\n        yield current;\n    }\n}\n\n"]}